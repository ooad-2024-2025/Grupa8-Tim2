@model IEnumerable<K_K.Models.Recenzija>
@{
    ViewData["Title"] = "Recenzije Proizvoda";
    // Dohvaćamo ProizvodId ako je dostupan, pretpostavljamo da je to prvi element ili se šalje u ViewData
    int proizvodId = 0;
    if (Model != null && Model.Any())
    {
        proizvodId = Model.First().ProizvodId;
    }
    else if (ViewData["ProizvodId"] != null)
    {
        proizvodId = (int)ViewData["ProizvodId"];
    }
}

<h1>Recenzije za Proizvod</h1>

<p>
    @* Link za ostavljanje nove recenzije *@
    <a asp-action="OstaviRecenziju" asp-route-proizvodId="@proizvodId">Ostavi novu recenziju</a>
</p>

@if (TempData["Poruka"] != null)
{
    <div class="alert alert-info">
        @TempData["Poruka"]
    </div>
}

@if (Model == null || !Model.Any())
{
    <p>Trenutno nema recenzija za ovaj proizvod.</p>
}
else
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Ocjena: @item.Ocjena / 5</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@item.Korisnik?.KorisnickoIme (Id: @item.KorisnikId)</h6>
                        <p class="card-text">@item.Komentar</p>
                        @* Opcionalno: Prikaz datuma kreiranja, ako postoji u modelu *@
                        @* <small class="text-muted">Datum: @item.DatumKreiranja.ToShortDateString()</small> *@

                        @* Gumbi za uređivanje i brisanje - vidljivi samo vlasniku ili adminu *@
                        @{
                            // Dohvati trenutnog korisnika za provjeru autorizacije u View-u
                            // PAŽNJA: GetTrenutniKorisnikAsync() je async, ali View-ovi nisu direktno async.
                            // Ovo je pojednostavljena verzija. U pravoj aplikaciji biste proslijedili ulogu/ID kroz ViewModel.
                            // Za sada, pretpostavljamo da je autorizacija već obrađena na backendu,
                            // i da samo sakrivamo/prikazujemo gumbe radi estetike.
                            // BOLJI PRISTUP: Poslati flag (npr. bool CanEdit, bool CanDelete) iz kontrolera u ViewModel.
                            var currentUserIdClaim = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                            int currentUserId = 0;
                            if (currentUserIdClaim != null)
                            {
                                int.TryParse(currentUserIdClaim, out currentUserId);
                            }

                            // Pretpostavka da je Uloga u Recenzija.Korisnik dostupna i da se podudara sa prijavljenim korisnikom
                            // I da uloga.Admin radi.
                            bool isAdmin = false; // Postaviti true ako je trenutni korisnik admin
                            // ILI dohvatite iz ViewData["IsAdmin"] ako šaljete iz kontrolera

                            // Ovo je pojednostavljena provjera SAMO na strani klijenta
                            // Stvarna autorizacija je na serveru u kontroleru!
                            if (currentUserId > 0 && item.KorisnikId == currentUserId || isAdmin)
                            {
                                <a asp-action="UrediRecenziju" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Uredi</a>
                                <form asp-action="IzbrisiRecenziju" asp-route-id="@item.Id" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Jeste li sigurni da želite obrisati ovu recenziju?');">Obriši</button>
                                    @Html.AntiForgeryToken()
                                </form>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}